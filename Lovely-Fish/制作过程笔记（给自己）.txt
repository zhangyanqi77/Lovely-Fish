
属性要在init初始化

阶段一：

1.准备工作

搭建html网页结构

绘制背景

遇到问题

2.绘制海葵（静态）


步骤：

js定义对象(eg:var fruitsObj = function(){...})

添加相应属性

(eg:fruitsObj.prototype.num  eg:位置x，y；数量；)

初始化方法init；
    
在主js（main.js）内全局声明一个变量（eg：fruit），在main。js的初始化init方法里定义对象（fruit = new fruitsObj();）；再调用init方法（fruit.init();）。

绘制方法；

在gameloop内调用draw等方法；

3.绘制果实，蓝色和黄色

长大到成熟

果实生长规则：果实允许出现的范围15个（当<15就要有果实生长）

4.画大鱼，身子，尾巴，眼睛

Math.atan2(y,x)反正切，javascript的API

Math.atant2(y, x)返回的是正X轴和点 (x, y) 与原点连线 之间的角度，
这个角度是一个 -PI到 PI之间的弧度，表示点 (x, y) 对应的偏移角度。
这是一个逆时针角度，以弧度为单位。

注意此函数接受的参数：先传递 y 坐标，然后是 x 坐标。
还需要注意的是 atan2 接受单独的 x 和 y 参数，而 atan 接受两个参数的比值。
计算y和x的反正切值，返回值是数字（范围在-π~π）
极坐标向右为正，像左为负
鱼往下转为π，上为-π？

大鱼和鼠标产生坐标差

返回角度为鼠标相对大鱼的角度

lerpDistance(aim,cur,radio)在给的js里
aim：目标值
cur：当前值
// radio：百分比(越大趋向越慢)
//return aim + (cur - aim)*radio;返回趋向目标值？

角度趋向
// lerpAngle(a,b,t),自带角度调整（因为API返回值是-π~π），自己看

5.大鱼吃果实的碰撞检测
// 原理：判断距离
//坐标差平方（根据三角形三边关系，也为距离的平方）：calLength2(x1,y1，x2,y2);

6.绘制小鱼

7优化.大鱼吃果实效果

-------------------------------------

MDN网站
https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener

EventTarget.addEventListener() 方法将指定的事件监听器注册到 EventTarget 上，
当该对象触发指定的事件时，指定的回调函数就会被执行。 

事件目标可以是一个文档上的元素 Document 本身，Window 或者 XMLHttpRequest。

优点包括：

它允许给一个事件注册多个监听器。在使用DHTML库或者 Mozilla extensions 这样需要保证能够和其他的库或者差距并存的时候非常有用。

它提供了一种更精细的手段控制事件监听器的触发阶段。（即可以选择捕获或者冒泡）。

它对任何DOM元素都是有效的，而不仅仅只对HTML元素有效。

----------------------------------------------

第二阶段

1.小鱼动画

尾巴摆动

眨眼睛

身体变白

不希望一个数循环+1后>7，可以把结果对8取模

2.小鱼生命值判断

3.大鱼喂小鱼//碰撞检测

4.大鱼动画

眨眼

摆尾

身体升级（部分分值计算）

5.gameover

6.特效

大鱼吃果实

物体池pool

检测是否有闲着的物体

半径渐渐变大，颜色渐渐变弱（r和c反比）


7.大鱼喂小鱼

8.海葵摆动

二次贝塞尔曲线+正弦函数

9.果实在海葵上

10.调整游戏难度

11.游戏规则提示（待写）


